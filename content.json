[{"title":"linux下mongodb启动参数","date":"2017-03-08T15:55:11.000Z","path":"2017/03/08/centos-mongodb/","text":"服务器centos 7.2 已装好mongodb 新建一个文件mongodb.conf 1234dbpath = /home/db/logpath = /usr/local/mongodb/mongodb.logfork = trueport = 27017 dbpath 数据库目录logpath 日志路径fork 后台运行port 端口 保存后上传到mongodb的目录下 然后在终端里cd到mongodb的目录，执行 ./mongod –config mongodb.conf 或者加入到启动项里找到/etc/rc.local /usr/local/mongodb/bin/mongod –config mongodb.conf 即可","tags":[{"name":"build 21daysapp in 21days","slug":"build-21daysapp-in-21days","permalink":"https://quincyx.github.io/tags/build-21daysapp-in-21days/"},{"name":"mongodb","slug":"mongodb","permalink":"https://quincyx.github.io/tags/mongodb/"}]},{"title":"mongodb注册服务","date":"2017-03-08T15:42:12.000Z","path":"2017/03/08/mongodb注册服务/","text":"win下总不能每次都要用命令行打开数据库吧 话说mongodb的安装文件怎麼没有提供自动注册服务的功能捏？找到你的mongodb安装目录 C:\\Program Files\\MongoDB\\Server\\3.4\\bin 用管理员打开powershell，cd到上边的目录 cd ‘C:\\Program Files\\MongoDB\\Server\\3.4\\bin’ 此处有空格的文件夹名需要加引号然后执行下边命令创建服务 .\\mongod –logpath d:\\dev\\log\\MongoDB.log –logappend –dbpath d:\\dev\\db –serviceName MongoDB –install logpath改成你的日志存放目录dbpath改成你的数据库目录 没问题的话，服务面板里就可以看到mongodb了 删除服务的话，powshell用管理员也不行（命令错了？）换用管理员打开CMD sc delete MongoDB j即可","tags":[{"name":"build 21daysapp in 21days","slug":"build-21daysapp-in-21days","permalink":"https://quincyx.github.io/tags/build-21daysapp-in-21days/"},{"name":"mongodb","slug":"mongodb","permalink":"https://quincyx.github.io/tags/mongodb/"}]},{"title":"vue-cli webpack 引入jquery","date":"2017-03-08T06:14:42.000Z","path":"2017/03/08/webpack引入jquery/","text":"首先安装jquery npm i jquery -y --save-dev 在webpack.base.conf.js里加入 1var webpack = require(&quot;webpack&quot;) 在module.exports的最后加入 1234567plugins: [new webpack.optimize.CommonsChunkPlugin(&apos;common.js&apos;),new webpack.ProvidePlugin(&#123;jQuery: &quot;jquery&quot;,$: &quot;jquery&quot;&#125;)] 在main.js引入 import $ from &#39;jquery&#39; 重新 run dev","tags":[{"name":"build 21daysapp in 21days","slug":"build-21daysapp-in-21days","permalink":"https://quincyx.github.io/tags/build-21daysapp-in-21days/"}]},{"title":"Shift+右键\"在此处打开命令窗口\"替换为PowerShell","date":"2017-03-07T13:34:03.000Z","path":"2017/03/07/powershell/","text":"win10下powershell用起来还是很得劲的 把cmd替换为PowerShell的方式打开 Ctrl + R 输入regedit进入注册表 找到[HKEY_CLASSES_ROOT/Directory/Background/shell/cmd/command] 修改数据为C:/Windows/System32/WindowsPowerShell/v1.0/powershell.exe -NoExit cd “%V”","tags":[{"name":"powershell","slug":"powershell","permalink":"https://quincyx.github.io/tags/powershell/"}]},{"title":"markdown","date":"2017-03-07T13:33:25.000Z","path":"2017/03/07/markdown语法/","text":"markdown语法标题一级标题 # 一级标题 二级标题## 二级标题 三级标题### 三级标题 四级标题 #### 四级标题 五级标题##### 五级标题 六级标题###### 六级标题 列表 无序列表 无序列表 - 无序列表 无序列表 无序列表 * 无序列表 有序列表 有序列表 有序列表 1. 有序列表 2. 有序列表 3. 有序列表 引用 引用的内容 &gt; 引用的内容 图片 ![]() ![baidulogo](https://www.baidu.com/img/bd_logo1.png) 链接github []() [github](https://github.com/) 粗体与斜体这里是粗体 **这里是粗体** 这里是斜体 *这里是斜体* 表格此处略过 代码框if(has_dream == true){day = days} &middot;if(has_dream == true){day = days}&middot; 1代码段 &middot;&middot;&middot;代码段&middot;&middot;&middot; 分割线 *** 转义字符 转义字符 显示字符 &amp;middot; &middot; &amp;nbsp; &nbsp; &amp;quot; &quot; &amp;amp; &amp; &amp;lt; &lt; &amp;gt; &gt; &amp;brvbar; &brvbar; &amp;copy; &copy; &amp;reg; &reg; 其他行尾两个空格换行","tags":[{"name":"markdown","slug":"markdown","permalink":"https://quincyx.github.io/tags/markdown/"}]},{"title":"ECS搭建nodejs+mongodb+vue+nginx+pureftp","date":"2017-03-07T06:42:22.000Z","path":"2017/03/07/ECS搭建/","text":"系统版本centOS 7.2 更新系统软件 yum -y update 安装node.js下载node源码 cd /usr/local/src wget https://nodejs.org/dist/v7.7.1/node-v7.7.1.tar.gz tar -xzvf node-v7.7.1.tar.gz cd node-v7.7.1 此处插入安装gcc以完成编译 yum -y install gcc gcc-c++ 执行配置脚本来进行编译预处理 ./configure 编译源代码 makemake install 安装 express 和 forever，这两个模块都推荐 global 安装 npm -g install express forever 下面来安装mongodb首先下载安装包 cd /usr/localwget https://fastdl.mongodb.org/linux/mongodb-linux-x86_64-3.4.2.tgztar zxvf mongodb-linux-x86_64-3.4.2.tgzmv mongodb-linux-x86_64-3.4.2 mongodb 此处插入安装vim yum install -y vim 把mongodb加入开机启动 vim /etc/rc.d/rc.local 添加以下字段 /usr/local/mongodb/bin/mongod –dbpath=/var/mongodb/data &amp; 保存退出 :wq 建立超级链接, 不然 sudo node 时会报 “command not found” sudo ln -s/usr/local/bin/node /usr/bin/nodesudo ln -s/usr/local/lib/node /usr/lib/nodesudo ln -s/usr/local/bin/npm /usr/bin/npmsudo ln -s/usr/local/bin/node-waf /usr/bin/node-wafsudo ln -s/usr/local/bin/forever /usr/bin/forever ##forever用法 启动应用 forever start server.js 停止 forever stop app.js 检视运行中的应用: forever list 关闭应用 forever stop 0 安装vue安装Vue-Cli npm i -g vue-cli 准备目录 cd /home 初始化项目到vue文件夹 vue init webpack vue 进入目录 cd vue 安装依赖 npm install 运行dev服务器 npm run dev 此时访问你的IP：8080应该能看到vue的demo页面了 实际上你应该用 forever start ./build/dev-server.js来保证退出终端后服务仍可用 配置nginx代理安装nginx npm install -y nginx 查找nginx配置文件 nginx -t 此处不推荐再用vim在shell里改文件了，毕竟不好用当然你要是觉得好用就当我没说 用行云管家连接ecs服务器直接访问云主机的文件系统，找到nginx.conf添加以下信息12345678910server &#123; listen 80; server_name 你的网址.com; location / &#123; proxy_set_header X-Real-IP $remote_addr; proxy_set_header Host $http_host; proxy_pass http://127.0.0.1:8080; &#125; &#125; 当然你也可以多添加几个域名，分配不同的root目录，或者转发node.js生成的不同端口，就可以部署多站点虚拟主机了。 配置pureftp没有ftp简直都不能叫能用的服务器当然你要是git玩的溜就当我没说 安装pureftp yum install pure-ftpd -y 创建ftp的用户组 groupadd ftpgroup 创建ftp用户并指定/home目录 useradd 你的ftp账户名 -u ftpgroup -d /home 修改ftp用户的密码 passwd 你的ftp账户名 配置防火墙策略 iptables -A INPUT -p tcp –dport 21 -j ACCEPTiptables -A INPUT -p tcp –dport 48000:50000 -j ACCEPT 修改目录权限 chown 你的ftp账户名.ftpgroup /home/ -R 启动ftp服务 service pure-ftpd start","tags":[{"name":"build 21daysapp in 21days","slug":"build-21daysapp-in-21days","permalink":"https://quincyx.github.io/tags/build-21daysapp-in-21days/"}]},{"title":"Hexo搭建记录","date":"2017-03-07T04:57:27.000Z","path":"2017/03/07/hexo搭建/","text":"其实github page当作blog还是挺麻烦的（挺不好用的） 但是毕竟有github的逼格加持 还能刷github的活跃点 那就弄一个罢 本机环境 win10 RS1 node.js V7.7.1 git V2.12.0 首先是github在你的github账号下新建一个repository Repository name 就填上你的账户名.github.io 然后进入repository，直接找到最后一个Setting标签 在GitHub Pages这一栏 source里选择你要发布的branch，默认master，点击save 没啥问题的话，这里会有个绿色横幅 Your site is published at https://你的名字.github.io/ 然后是hexo按照hexo官网的指示 全局安装hexo-cli npm install hexo-cli -g 把hexo安装到blog目录 hexo init blog 进入hexo目录 cd blog 安装依赖 npm install 启动本地hexo服务器 hexo server shell显示以下信息 INFO Start processingINFO Hexo is running at http://localhost:4000/. press Ctrl+C to stop. 安装完成，打开http://localhost:4000/就可以看到blog页面了 好了可以关掉server了 外观也很重要先别急着写blog，先来安装个主题样式 比如这个yilia，这是demo git到本地或者用github desktop Clone到本地 把源码放到Hexo的/themes/yilia目录下 修改主题目录里的_config.yml文件 #你的头像urlavatar: 此处填上头像地址，要不然不好看是吧 其他的就按需修改吧 然后回到Hexo根目录，修改_config.yml文件 theme: yilia 主题改为yilia就好了 再找到最后的deploy设置项 deploy:&nbsp;&nbsp;type: git&nbsp;&nbsp;repo: https://github.com/你的名字/你的名字.github.io.git&nbsp;&nbsp;branch: master repo修改成你的仓库地址 然后在末尾加上 jsonContent:&nbsp;&nbsp;meta: false&nbsp;&nbsp;pages: false&nbsp;&nbsp;posts:&nbsp;&nbsp;&nbsp;&nbsp;title: true&nbsp;&nbsp;&nbsp;&nbsp;date: true&nbsp;&nbsp;&nbsp;&nbsp;path: true&nbsp;&nbsp;&nbsp;&nbsp;text: true&nbsp;&nbsp;&nbsp;&nbsp;raw: false&nbsp;&nbsp;&nbsp;&nbsp;content: false&nbsp;&nbsp;&nbsp;&nbsp;slug: false&nbsp;&nbsp;&nbsp;&nbsp;updated: false&nbsp;&nbsp;&nbsp;&nbsp;comments: false&nbsp;&nbsp;&nbsp;&nbsp;link: false&nbsp;&nbsp;&nbsp;&nbsp;permalink: false&nbsp;&nbsp;&nbsp;&nbsp;excerpt: false&nbsp;&nbsp;&nbsp;&nbsp;categories: false&nbsp;&nbsp;&nbsp;&nbsp;tags: true 可以修复主题中侧边栏显示问题 部署此处还得加再一个部署插件 npm install hexo-deployer-git –save 新建文章 hexo new “新文章” 生成静态页面 hexo generate 部署到github hexo deploy 为了方便使用，在hexo目录下放一个脚本 hexo generatehexo deploy 保存为一键发布.ps1以后直接右键用powershell运行就可以生成、发布了 想想以后发个博客的完整流程要点击资源管理器，找到D盘，打开dev目录，再翻两层找到github.io目录，然后运行power shell，新建个空文章，然后在source/_posts目录下再打开md文件用VS code编辑好，才能运行hexo generate和hexo deploy发布出去，还真是有点小激动呢。你问我为啥没有用hexo server本地预览一下？我答：你可真闲，要是每发一篇文章想再debug一遍我也不介意。 还有，自己写的md文章要在合适的位置加上read more标签 &lt;!-- more --&gt;","tags":[{"name":"github","slug":"github","permalink":"https://quincyx.github.io/tags/github/"},{"name":"hexo","slug":"hexo","permalink":"https://quincyx.github.io/tags/hexo/"}]},{"title":"Hello World","date":"2017-03-07T04:45:01.120Z","path":"2017/03/07/hello-world/","text":"Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post1$ hexo new \"My New Post\" More info: Writing Run server1$ hexo server More info: Server Generate static files1$ hexo generate More info: Generating Deploy to remote sites1$ hexo deploy More info: Deployment","tags":[]}]